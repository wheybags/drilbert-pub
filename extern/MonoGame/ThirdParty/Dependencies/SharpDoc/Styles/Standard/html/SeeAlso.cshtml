@*
// Copyright (c) 2010-2013 SharpDoc - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.       
// -------------------------------------------------------------------------------
// Override this template to modify the global behavior for each Dump functions
// -------------------------------------------------------------------------------
*@
@using SharpDoc.Model
@using System.Text;
@model SharpDoc.TemplateContext
@Import("Section")

@functions {

    public string SeeAlsoToText(NModelBase element)
    {
        var text = new StringBuilder();

        var groups = new List<string>() {"Reference"};
        
        foreach(var seealso in element.SeeAlsos)
        {
            if (!groups.Contains(seealso.GroupName))
            {
                groups.Add(seealso.GroupName);
            }
        }

        foreach (var groupName in groups)
        {
            text.AppendFormat("<h4 class='sdoc-subheading'>{0}</h4>", groupName).AppendLine();
            
            foreach(var seealso in element.SeeAlsos)
            {
                if (seealso.GroupName != groupName)
                {
                    continue;
                }

                text.AppendLine("<div class='seeAlsoStyle'>");
                text.AppendFormat(ToUrl(seealso.LinkItem, seealso.LinkItem.PageTitle, false, null, false));
                text.AppendLine("</div>");
            }
        }
        return text.ToString();
    }
}

@*// Dumps members*@
@helper Dump(NModelBase element)
{
   if(element.SeeAlsos.Count > 0)
   {
       @Helpers.Section.Dump("See Also", SeeAlsoToText(element))
   }
}